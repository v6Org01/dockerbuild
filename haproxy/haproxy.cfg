global
  log stdout format raw local0
  user haproxy
  group haproxy
  maxconn 4096

defaults
  log global
  mode tcp
  option tcplog
  option dontlognull
  retries 3
  timeout connect 4s
  timeout client 30s
  timeout server 30s
  timeout http-request 10s
  timeout http-keep-alive 2s
  timeout queue 5s
  timeout tunnel 2m
  timeout client-fin 1s
  timeout server-fin 1s
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxqueue 405 weight 100 # maxqueue = 10% global maxconn

# global-acl
# acl internal src 192.168.5.0/24 192.168.6.0/24
acl public src not 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16

## haproxy

frontend stats
  bind 192.168.5.101:70
  bind 192.168.5.100:71
  mode http
  option httplog

  stats enable
  stats hide-version
  stats uri /haproxy?stats
  stats refresh 30s
  stats show-legends
  stats show-node
  stats socket /run/haproxy.sock mode 660 level admin uid haproxy gid haproxy
  stats timeout 30s

  # acl for 192.168.5.100:71
  acl statsIPPort dst 192.168.5.100 dst_port 71

  # auth for 192.168.5.100:71
  http-request auth realm HAProxyStatistics if statsIPPort
  stats auth admin:NkImb3RjTiNhYTdkWFlER2RaeHZZb0JzKnVlYiFzUyRRTDVtUWkkcG8zdHlYeGJ3Z1RZWiomVXE5S2h5Wl5yN1ZAazYlZXleb0NROWhCekBOYXZwZ3RSZGFuQUNZTk4kbSEyUEtHSzYjV3g2UmRrWEt1Z0B3WHVOOCVlZkskRnc= if statsIPPort

  # admin for 192.168.5.100:71
  stats admin if statsIPPort

## keepalived

frontend healthz
    bind 127.0.0.1:8404
    mode http
    monitor-uri /healthz
    option dontlog-normal

## k8s
  
frontend k8s-api
  bind 192.168.5.100:6443
  default-server maxconn 75
  default_backend k8s-api

backend k8s-api
  balance roundrobin
  option ssl-hello-chk
  server k8s-api-1 192.168.5.12:6443 check # mini02
  server k8s-api-2 192.168.5.13:6443 check # mini03
  server k8s-api-3 192.168.5.16:6443 check # srv01
  tcp-request content reject if public

## traefik

# traefik-acl
acl sni_haaaa00 req.ssl_sni -i haaaa00.jlv6.com # homeassistant
acl sni_jeeeee60 req.ssl_sni -i jeeeee60.jlv6.com # jellyfin
acl public_subd sni_haaaa00 sni_jeeeee60

frontend traefik
  bind: 192.168.5.100:443
  bind: 192.168.5.101:443

  tcp-request content reject if public !public_subd

backend traefik
  option ssl-hello-chk
  server traefik-1 192.168.5.12:30443 check send-proxy-v2 # mini02
  server traefik-2 192.168.5.13:30443 check send-proxy-v2 # mini03
  server traefik-3 192.168.5.16:30443 check send-proxy-v2 # srv01
