name: homeassistant - build_docker_image

env:
  GIT_SUBDIR: homeassistant
  REGISTRY: pcr.jlv6.com:443
  
on:
  workflow_run:
    workflows: ["homeassistant - check_for_new_version"]
    branches: [main]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  debug:
    runs-on: [self-hosted, X64]
    steps:
      - name: print var HA_NEW_VERSION_FOUND
        run: echo "HA_NEW_VERSION_FOUND value is ${{ vars.HA_NEW_VERSION_FOUND }}" 
  chconfig:
    runs-on: [self-hosted, X64]
    needs: debug
    if: ${{ vars.HA_NEW_VERSION_FOUND == 'true' }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: find and replace - Dockerfile
        run: sed -i 's/FROM homeassistant\/home-assistant:.*/FROM homeassistant\/home-assistant:${{ vars.HA_VERSION }}/' homeassistant/Dockerfile
      - name: find and replace - ldap-auth-ad - HA_LDAP_SERVER
        run: sed -i 's/SERVER =.*/SERVER = ${{ secrets.HA_LDAP_SERVER }}/' homeassistant/ldap-auth-ad.py
      - name: find and replace - ldap-auth-ad - HA_LDAP_HELPER_DN
        run: sed -i 's/HELPERDN =.*/HELPERDN = ${{ secrets.HA_LDAP_HELPER_DN }}/' homeassistant/ldap-auth-ad.py
      - name: find and replace - ldap-auth-ad - HA_LDAP_HELPER_PWD
        run: sed -i 's/HELPERPASS =.*/HELPERPASS = ${{ secrets.HA_LDAP_HELPER_PWD }}/' homeassistant/ldap-auth-ad.py
      - name: find and replace - ldap-auth-ad - HA_LDAP_BASEDN
        run: sed -i 's/BASEDN =.*/BASEDN = ${{ secrets.HA_LDAP_BASEDN }}/' homeassistant/ldap-auth-ad.py
      - name: find and replace - ldap-auth-ad - HA_LDAP_MEMBEROF
        run: sed -i 's/memberOf=.*/memberOf=${{ secrets.HA_LDAP_MEMBEROF }}/' homeassistant/ldap-auth-ad.py
  build-image:
    runs-on: [self-hosted, X64]
    needs: chconfig
    if: ${{ vars.HA_NEW_VERSION_FOUND == 'true' }}
    steps:
      - name: setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: login to pcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PCR_USERNAME }}
          password: ${{ secrets.PCR_PASSWORD }}
      - name: extract metadata for the docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.REGISTRY }}/arc-${{ env.GIT_SUBDIR }}"
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:${{ env.GIT_SUBDIR }}"
          push: true
          platforms: linux/amd64
          tags: |
            "${{ env.REGISTRY }}/arc-${{ env.GIT_SUBDIR }}:latest"
            "${{ env.REGISTRY }}/arc-${{ env.GIT_SUBDIR }}:${{ vars.HA_VERSION }}"
